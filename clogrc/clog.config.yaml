---
# yamllint disable rule:colons
# clog Jumbo "clog.core.config"
#                                 _      _
#   ___  __ __  ___   _ _   _ _  (_)  __| |  ___   ___
#  / _ \ \ V / / -_) | '_| | '_| | | / _` | / -_) (_-<
#  \___/  \_/  \___| |_|   |_|   |_| \__,_| \___| /__/
### when clog starts it uses these config values to override the defaults.

# --- shell snippets for this project -----------------------------------------
snippets:
  watch: hugo server --port=1313 --buildDrafts --buildFuture --buildExpired --cleanDestinationDir
  git:
    tag:
      ref: yq -r '.releases[0].version'  data/releases.yaml
    message:
      ref:  yq -r '.releases[0].note'  data/releases.yaml
  project:
    config: |
      PROJECT=www-metarex-media
      DOCKER_NS="metarexmedia"
    has:
      golang: go version|grep '^go '|grep -oE '[0-9]\.[0-9]+\.[0-9]+'
      hugo: hugo version|grep -oE '[0-9]\.[0-9]+\.[0-9]+'
      git-lfs: git-lfs version|grep -oE '[0-9]\.[0-9]+\.[0-9]+'|head -1
    needs:
      golang: echo "1.24.0"
      hugo: echo "0.143.1"
      git-lfs: echo "3.6.0"
  testamd: "docker run -d -p 12020:80 metarexmedia/www-metarex-media-amd:latest"
  testarm: "docker run -d -p 12020:80 metarexmedia/www-metarex-media-arm:latest"

  lfs-install: |
    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
    sudo apt-get install git-lfs


# --- check project -----------------------------------------------------------
check:
  build:
    blocks:
      - name: golang version
        try: |
          [[ "$(clog project has golang)" == "$(clog project needs golang)" ]]
        ok: clog Log -I "golang $(clog project has golang) good"
        catch: |
          clog Log -E "golang: bad version. Need $(clog project needs golang), got $(clog project has golang)"
      - name: hugo version
        try: | 
          [[ "$(clog project has hugo)" == "$(clog project needs hugo)" ]]
        ok: clog Log -I "hugo $(clog project has golang) good"
        catch: |
          clog Log -E "hugo: bad version. Need $(clog project needs hugo), got $(clog project has hugo)"
      - name: git-lfs version
        try: |
          [[ "$(clog project has git-lfs)"  == "$(clog project needs git-lfs)" ]]
        ok: clog Log -I "git-lfs $(clog project has git-lfs) good"
        catch: |
          clog Log -W "git-lfs: bad version. Need $(clog project needs git-lfs), got $(clog project has git-lfs)"
      - name: docker?
        try: which docker 2>/dev/null
        ok: clog Log -I "docker ok"
        catch: clog Log -E "docker not on path"
      - name: docker?
        try: which docker 2>/dev/null
        ok: clog Log -I "docker ok"
        catch: clog Log -E "docker not on path"
